name: Create and publish a Docker image

on: 
  workflow_dispatch:
    inputs:
      tag:
        description: 'Image Tag'
        required: true
env:
  REGISTRY: ghcr.io
  GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_latest: ${{ steps.image_latest.outputs.IMAGE_LATEST }}
      image_version: ${{ steps.image_version.outputs.IMAGE_VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Downcase IMAGE_NAME
        run: echo "IMAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      
      - name: Set Image Tag Latest
        run: echo "IMAGE_LATEST=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> ${GITHUB_ENV}
      
      - name: Set Image Tag Version
        run: echo "IMAGE_VERSION=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.tag }}" >> ${GITHUB_ENV}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}    
     
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_LATEST }}
            ${{ env.IMAGE_VERSION }}
          platforms: linux/arm64,linux/arm/v7,linux/amd64
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.description=GitHub Action for building and pushing Docker images
            org.opencontainers.image.url=https://${{ env.IMAGE_VERSION }}
            org.opencontainers.image.version=${{ inputs.tag }}
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Set output Image Latest
        id: image_latest
        run: |
          echo "IMAGE_LATEST=${{ env.IMAGE_LATEST }}" >> $GITHUB_OUTPUT

      - name: Set output Image Version
        id: image_version
        run: |
          echo "IMAGE_VERSION=${{ env.IMAGE_VERSION }}" >> $GITHUB_OUTPUT